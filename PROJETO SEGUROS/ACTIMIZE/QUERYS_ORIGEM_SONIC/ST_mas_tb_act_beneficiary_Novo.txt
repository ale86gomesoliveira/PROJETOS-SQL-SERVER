-- QUERY REFERENTE BENEFICIARY 
with 
cte_max_dat_atualizacao_ult_registro
as
(
	select
	Policy_Nr,
	max(Last_Information_Dh) as Last_Information_Dh
	from piidls_br.mas_tb_policy pp
	WHERE pp.Status_Policy_Tx IN ('InForce')
	--and Policy_Nr in ('83000000001310','84000000001310','85000000001310')
	group by
	Policy_Nr
)
select
distinct
replace(replace(replace(replace(rb.Customer_Id,'|',''),'-',''),'.',''),'/','')	as party_key_id,
convert(date,rb.Birth_Dt)														as Birth_Incorp_Dt,
'' AS First_Name_Nm,
'' AS Middle_Name_Nm,
'' AS Last_Name_Nm,
'' AS Maiden_Name_Nm,
CASE 
	WHEN rb.Gender_Tp IN ('M','F','U') THEN 'PF' 
	WHEN rb.Gender_Tp = 'N' THEN 'PJ'
	WHEN rb.Gender_Tp IS NULL OR rb.Gender_Tp = '' THEN 'Não Informado'
	END AS Gender_Cd, 											
CASE 
	WHEN pp.Status_Policy_Tx IN ('InForce')	THEN 'ACTIVE'															
	END as Is_Active_Nm,
(select min(Delivery_Dt) as Delivery_Dt from piidls_br.mas_tb_policy ap where ap.Policy_Nr = pp.Policy_Nr) as Is_Active_Dt,
'' AS Is_To_Be_Deleted_Nm,
'' AS Party_Classification_Cd,
isnull(rb.Gender_Tp,'Não Informado')										    as Party_Type_Cd,
rtrim(ltrim(replace(rb.customer_nm,'|','')))									as Party_Name_Nm,
'BR'																			as Tenant_Cd,
'0'																				as Partitioning_Key_Id,
'' 																				as Party_Alias_Key1_Id,
'' AS Party_Alias_First_Name1_Nm,
'' AS Party_Alias_Middle_Name1_Nm,
'' AS Party_Alias_Last_Name1_Nm,
'' AS Party_Alias_Maiden_Name1_Nm,
'' AS Party_Alias_Key2_Nm,
'' AS Party_Alias_First_Name2_Nm,
'' AS Party_Alias_Middle_Name2_Nm,
'' AS Party_Alias_Last_Name2_Nm,
'' AS Party_Alias_Maiden_Name2_Nm,
'' AS Party_Alias_Key3_Id,
'' AS Party_Alias_First_Name3_Nm,
'' AS Party_Alias_Middle_Name3_Nm,
'' AS Party_Alias_Last_Name3_Nm,
'' AS Party_Alias_Maiden_Name3_Nm,
'' AS Document_Key1_Id,
replace(replace(replace(replace(rb.Customer_Id, ' ', ''),'/',''),'-',''),'.','')AS Document_Number1_Nr,
'' AS Document_Type1_Cd,
'' AS Issue_Country1_Cd,
'' AS Issue_State_Province1_Cd,
'' AS Document_Key2_Id,
'' AS Document_Number2_Nr,
'' AS Document_Type2_Cd,
'' AS Issue_Country2_Cd,
'' AS Issue_State_Province2_Cd,
'' AS Document_Key3_Id,
'' AS Document_Number3_Nr,
'' AS Document_Type3_Cd,
'' AS Issue_Country3_Cd,
'' AS Issue_State_Province3_Cd,
'' AS Document_Key4_Id,
'' AS Document_Number4_Nr,
'' AS Document_Type4_Cd,
'' AS Issue_Country4_Cd,
'' AS Issue_State_Province4_Cd,		
'Group Life Beneficiaries' as Primary_Party_Business_Unit_Cd,
'' AS Business_Unit1_Cd,
'' AS Business_Unit2_Cd,
'' AS Business_Unit3_Cd,
'' AS Party_Reference_Id,
'' AS Email_Relation_Type1_Cd,
'' as Party_Email_Address1_Nm,
'' AS Email_Relation_Type2_Cd,
'' AS Party_Email_Address2_Nm,
'' AS Phone_Relation_Type1_Cd,
'' as Party_Phone1_Nr,
'' AS Phone_Relation_Type2_Cd,
'' AS Party_Phone2_Nr,
'' AS Phone_Relation_Type3_Cd,
'' AS Party_Phone3_Nr,
'' as Address_Relation_Type1_Cd,
ltrim(rtrim(replace(concat(Personal_Dets_Add1_Tx,Personal_Dets_Add2_Tx,Personal_Dets_Add3_Tx),'|',''))) as Address_Line_1_Nm,
'' AS Address_Line_2_Nm,
'' AS Address_Line_3_Nm,
'' AS Address_Line_4_Nm,
'' AS Address_Line_5_Nm,
'' AS Apartment_Suite_Number1_Nr,
'' AS Building_Number1_Nr,
ltrim(rtrim(isnull(replace(rb.Personal_Dets_City_Nm,'|',''),'')))								as City1_Nm,
CASE
	WHEN rb.Personal_Dets_Country_Nm IS NULL OR rb.Personal_Dets_Country_Nm = ' ' THEN ' '
	WHEN rb.Personal_Dets_Country_Nm IS NOT NULL OR rb.Personal_Dets_Country_Nm <> 'BR' THEN 'BR'
	END as Address_Country1_Cd,
'' 																				AS Po_Box1_Nm,
'' 																				AS State_Province1_Cd,
'' 																				AS Street1_Nm,	
isnull(replace(rb.Personal_Dets_Postal_Cd,'-',''),'')							as Zip_Postcode1_Cd,
'' 																				AS Address_Relation_Type2_Cd,
'' 																				AS Address2_Line_1_Nm,
'' AS Address2_Line_2_Nm,
'' AS Address2_Line_3_Nm,
'' AS Address2_Line_4_Nm,
'' AS Address2_Line_5_Nm,
'' AS Apartment_Suite_Number2_Nr,
'' AS Building_Number2_Nr,
'' AS City2_Nm,
'' as Address_Country2_Cd,
'' AS Po_Box2_Nm,
'' AS State_Province2_Cd,
'' AS Street2_Nm,
'' AS Zip_Postcode2_Cd,
'' AS Address_Relation_Type3_Cd,
'' AS Address3_Line_1_Nm,
'' AS Address3_Line_2_Nm,
'' AS Address3_Line_3_Nm,
'' AS Address3_Line_4_Nm,
'' AS Address3_Line_5_Nm,
'' AS Apartment_Suite_Number3_Nr,
'' AS Building_Number3_Nr,
'' AS City3_Nm,
'' AS Address_Country3_Cd,
'' AS Po_Box3_Nm,
'' AS State_Province3_Cd,
'' AS Street3_Nm,
'' AS Zip_Postcode3_Cd,
CASE
	WHEN rb.Personal_Dets_Country_Nm IS NULL OR rb.Personal_Dets_Country_Nm = ' ' THEN ' '
	WHEN rb.Personal_Dets_Country_Nm IS NOT NULL OR rb.Personal_Dets_Country_Nm <> 'BR' THEN 'DOMICILIO'
	END as Country_Relation_Type1_Nm,
CASE
	WHEN rb.Personal_Dets_Country_Nm IS NULL OR rb.Personal_Dets_Country_Nm = ' ' THEN ' '
	WHEN rb.Personal_Dets_Country_Nm IS NOT NULL OR rb.Personal_Dets_Country_Nm <> 'BR' THEN 'BR'
	END as Country_Relation1_Cd,
''																				as Country_Relation_Type2_Nm,
''																				as Country_Relation2_Cd,
'' AS Country_Relation_Type3_Nm,
'' AS Country_Relation3_Cd,
'' AS Is_Foreign_Financial_Org_Nm,
'' AS Is_Foreign_Official_Nm,
'' AS Is_Nbfi_Ds,
'' AS Is_Non_Resident_Ds,
'' AS Is_Pep_Ds,
isnull(convert(date, pp.Update_Dt),getdate())									as last_Review_Dt,
'0' 																			AS Number_Of_Sars_Nr,
'0' 																			AS Number_Of_Subpoenas_Nr,
''																				as Occupation_Cd,
''  																			AS Organization_Unit_Cd,
'0' 																			AS Party_Curr_Annual_Income_Vl,
'NON_PGIM'																		as Risk_Segment_Cd,
''																				as Region_Cd,
convert(date,getdate())															as Row_Update_Dt,
''																				as Sector_Cd,
'' AS Is_Our_Employee_Ds,
'' AS Is_Psp_Ds,
'' AS Is_Tppp_Ds,
'' AS Is_Foreign_Corporation_Nm,
'' AS Primary_Representative_Key_Id,
'' AS Source_Of_Income_Cd,
'' AS Party_Status_Cd,
'' AS Non_Res_Alien_Cd,
'0' AS Number_Of_Dependents_Nr,
'' AS Tax_Bracket_Cd,
'' AS Behaviour_Trends_Nm,
'' AS Client_Level_Opening_Ch_Ds,
'0' AS Percentage_Pc,
''																				as Employee_Type_Cd,	
'SONIC'     																	as Source_System_Cd,
rb.Legal_Rep_RelationShip_Tx													as Relation_Type_Cd,
'BENEFICIARY'																	as Custom_Role_Ds,
'' 																				as Custom_Policy_Number_Nr,
getdate() as INSERT_SCD_DT
from  piidls_br.mas_tb_risk_beneficiary rb 
INNER JOIN piidls_br.mas_tb_policy pp on pp.Source_Key_Id = rb.Source_Key_Id
INNER JOIN cte_max_dat_atualizacao_ult_registro cte on pp.Policy_Nr = cte.policy_nr and pp.Last_Information_Dh = cte.last_information_dh
WHERE pp.Status_Policy_Tx IN ('InForce')


-- TESTANDO ULITMO REGISTRO
/*
with 
cte_max_dat_apolice
as
(
select
max(Last_Information_Dh) as Last_Information_Dh,
pp.Policy_Nr
from piidls_br.mas_tb_policy pp
WHERE pp.Status_Policy_Tx IN ('InForce')
and Policy_Nr in ('83000000001310','84000000001310','85000000001310')
and Delivery_Dt is not null
group by
pp.Policy_Nr
)
select
pp.Policy_Nr,
pp.Last_Information_Dh 
from piidls_br.mas_tb_policy pp
--INNER JOIN piidls_br.mas_tb_risk_beneficiary rb on pp.Source_Key_Id = rb.Source_Key_Id
inner join cte_max_dat_apolice ce on pp.Policy_Nr = ce.policy_nr and pp.Last_Information_Dh = ce.last_information_dh
WHERE pp.Status_Policy_Tx IN ('InForce')
*/


