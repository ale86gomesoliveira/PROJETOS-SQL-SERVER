
----------- gli_tb_act_insured---------

/*
-- add o seguinte comando: case when cp.Nm_pessoa = ' ' OR cP.Nm_pessoa IS NULL THEN CONCAT(cp.pnome,' ', cp.unome)     
                           else RTRIM(LTRIM(p.nm_pessoa)) end as Party_Name_Nm,
-- 
*/

SELECT 
DISTINCT
cp.id_pessoa AS Party_Key_Id,
convert(date,cp.Dt_nascimento)  AS Birth_Incorp_Dt, 
'' as First_Name_Nm ,
'' as Middle_Name_Nm ,
'' as Last_Name_Nm ,
'' as Maiden_Name_Nm ,
case when cp.Cd_tipo_pessoa <> 1 then 'Company' else 
case when cs.nm_sexo is null or cs.nm_sexo = '' then 'Não Informado' else cs.nm_sexo end end as Gender_Cd , 
'Active' AS Is_Active_Nm,
(select max(convert(date,cps.dt_contratacao)) from corp_pessoas cps where cps.Id_pessoa = cp.Id_pessoa) as Is_Active_Dt,
--convert(date,getdate()) AS Is_Active_Dt, 
'' as Is_To_Be_Deleted_Nm,
'' as Party_Classification_Cd,
CASE WHEN cp.cd_tipo_pessoa = '1' THEN 'PF' WHEN cp.cd_tipo_pessoa = '2' THEN 'PJ' END AS Party_Type_Cd,
case when cp.Nm_pessoa = ' ' OR cP.Nm_pessoa IS NULL THEN CONCAT(cp.pnome,' ', cp.unome)
     else RTRIM(LTRIM(p.nm_pessoa)) end as Party_Name_Nm,
--RTRIM(LTRIM(cp.nm_pessoa)) AS Party_Name_Nm,
'BR' AS Tenant_Cd,
'0' AS Partitioning_Key_Id,
'' as Party_Alias_Key1_Id,
'' as Party_Alias_First_Name1_Nm,
'' as Party_Alias_Middle_Name1_Nm,
'' as Party_Alias_Last_Name1_Nm,
'' as Party_Alias_Maiden_Name1_Nm,
'' as Party_Alias_Key2_Nm,
'' as Party_Alias_First_Name2_Nm,
'' as Party_Alias_Middle_Name2_Nm,
'' as Party_Alias_Last_Name2_Nm,
'' as Party_Alias_Maiden_Name2_Nm,
'' as Party_Alias_Key3_Id,
'' as Party_Alias_First_Name3_Nm,
'' as Party_Alias_Middle_Name3_Nm,
'' as Party_Alias_Last_Name3_Nm,
'' as Party_Alias_Maiden_Name3_Nm,
'' as Document_Key1_Id,
CP.Nr_cnpj_cpf as Document_Number1_Nr,
'' as Document_Type1_Cd,
'' as Issue_Country1_Cd,
'' as Issue_State_Province1_Cd,
'' as Document_Key2_Id,
'' as Document_Number2_Nr,
'' as Document_Type2_Cd,
'' as Issue_Country2_Cd,
'' as Issue_State_Province2_Cd,
'' as Document_Key3_Id,
'' as Document_Number3_Nr,
'' as Document_Type3_Cd,
'' as Issue_Country3_Cd,
'' as Issue_State_Province3_Cd,
'' as Document_Key4_Id,
'' as Document_Number4_Nr,
'' as Document_Type4_Cd,
'' as Issue_Country4_Cd,
'' as Issue_State_Province4_Cd,
'Group Life Customers and Beneficiaries Owners' AS Primary_Party_Business_Unit_Cd,
'' as Business_Unit1_Cd,
'' as Business_Unit2_Cd,
'' as Business_Unit3_Cd,
'' as Party_Reference_Id,
'' as Email_Relation_Type1_Cd,
'' as Party_Email_Address1_Nm,
'' as Email_Relation_Type2_Cd,
'' as Party_Email_Address2_Nm,
'' as Phone_Relation_Type1_Cd,
'' as Party_Phone1_Nr,
'' as Phone_Relation_Type2_Cd,
'' as Party_Phone2_Nr,
'' as Phone_Relation_Type3_Cd,
'' as Party_Phone3_Nr,
case when nm_endereco is not null and nm_endereco <> ' ' then 'DOMICILIO' else null end AS Address_Relation_Type1_Cd,
--nm_tp_endereco AS Address_Relation_Type1_Cd,
nm_endereco AS Address_Line_1_Nm,
'' as Address_Line_2_Nm,
'' as Address_Line_3_Nm,
'' as Address_Line_4_Nm,
'' as Address_Line_5_Nm,
'' as Apartment_Suite_Number1_Nr,
'' as Building_Number1_Nr,
LTRIM(RTRIM(nm_cidade)) AS City1_Nm,
CASE 
	WHEN nm_endereco IS NULL OR nm_endereco = '' THEN '' 
	WHEN nm_endereco IS NOT NULL THEN 'BR' 
	END AS Address_Country1_Cd, -- CAMPO AJUSTADO
'' as Po_Box1_Nm,
'' as State_Province1_Cd,
'' as Street1_Nm,
NM_cep AS Zip_Postcode1_Cd,
'' as Address_Relation_Type2_Cd,
'' as Address2_Line_1_Nm,
'' as Address2_Line_2_Nm,
'' as Address2_Line_3_Nm,
'' as Address2_Line_4_Nm,
'' as Address2_Line_5_Nm,
'' as Apartment_Suite_Number2_Nr,
'' as Building_Number2_Nr,
'' as City2_Nm,
'' as Address_Country2_Cd ,
'' as Po_Box2_Nm,
'' as State_Province2_Cd,
'' as Street2_Nm,
'' as Zip_Postcode2_Cd,
'' as Address_Relation_Type3_Cd,
'' as Address3_Line_1_Nm,
'' as Address3_Line_2_Nm,
'' as Address3_Line_3_Nm,
'' as Address3_Line_4_Nm,
'' as Address3_Line_5_Nm,
'' as Apartment_Suite_Number3_Nr,
'' as Building_Number3_Nr,
'' as City3_Nm,
'' as Address_Country3_Cd ,
'' as Po_Box3_Nm,
'' as State_Province3_Cd,
'' as Street3_Nm,
'' as Zip_Postcode3_Cd,
case when nm_endereco is not null and nm_endereco <> ' ' then 'DOMICILIO' else null end as Country_Relation_Type1_Nm,
case when nm_endereco is not null and nm_endereco <> ' ' then 'BR' else null end as Country_Relation1_Cd,
'' as Country_Relation_Type2_Nm ,
'' as Country_Relation2_Cd ,
'' as Country_Relation_Type3_Nm ,
'' as Country_Relation3_Cd ,
'' as Is_Foreign_Financial_Org_Nm,
'' as Is_Foreign_Official_Nm,
'' as Is_Nbfi_Ds,
'' as Is_Non_Resident_Ds,
'' as Is_Pep_Ds,
Null AS Last_Review_Dt,
'0' AS Number_Of_Sars_Nr,
'0' AS Number_Of_Subpoenas_Nr,
'' as Occupation_Cd,
'' as Organization_Unit_Cd,
'0' as Party_Curr_Annual_Income_Vl,
'NON_PGIM' AS Risk_Segment_Cd, 
'' as Region_Cd ,
null as Row_Update_Dt,
'' as Sector_Cd,
'' as Is_Our_Employee_Ds,
'' as Is_Psp_Ds,
'' as Is_Tppp_Ds,
'' as Is_Foreign_Corporation_Nm,
'' as Primary_Representative_Key_Id,
'' as Source_Of_Income_Cd,
'' as Party_Status_Cd,
'' as Non_Res_Alien_Cd,
'' as Number_Of_Dependents_Nr,
'' as Tax_Bracket_Cd,
'' as Behaviour_Trends_Nm,
'' as Client_Level_Opening_Ch_Ds,
'0' as Percentage_Pc,
'' as Employee_Type_Cd,
'I4PRO' AS Source_System_Cd,
null AS Relation_Type_Cd,
'INSURED' AS Custom_Role_Ds,
'' AS Custom_Policy_Number_Nr,
getdate () as INSERT_SCD_DT	
FROM CORP_PESSOAS CP WITH (NOLOCK)
INNER JOIN CORP_TP_PESSOA CTP WITH (NOLOCK) ON CP.CD_TIPO_PESSOA = CTP.CD_TIPO_PESSOA
INNER JOIN CORP_TP_REGISTRO CTR WITH (NOLOCK) ON CP.CD_TP_REGISTRO = CTR.CD_TP_REGISTRO
INNER JOIN CORP_APOLICE AP WITH (NOLOCK) ON AP.Id_pessoa_cliente = CP.ID_PESSOA
LEFT JOIN CORP_SEXO CS WITH (NOLOCK) ON CS.ID_SEXO = CP.ID_SEXO
left join   
(
SELECT Id_pessoa, id_tp_endereco, nm_endereco, nm_cidade, nm_cep, cd_uf,
RANK() OVER   (PARTITION BY Id_pessoa  ORDER BY id_endereco,  nr_sequencia ASC ) AS Rank 
FROM corp_endereco  where dv_endereco_padrao = 1 or nr_sequencia= 1 or nm_endereco is not null or nm_endereco <> ' ' 
) as e on  Cp.id_pessoa = e.Id_pessoa and e.rank= 1 
left  join corp_tp_endereco tpe on tpe.id_tp_endereco = e.id_tp_endereco
where ctr.Cd_tp_registro = 3  -- PEGANDO SÓ O QUE É SEGURADO. 
and ap.cd_status = 7 -- Pegando só apolices ativas
--AND CP.ID_PESSOA IN (733, 743,13753996)